// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TypographyWrapper = require("./TypographyWrapper");

function $$default(currentMasks, masksToInsertOrRemove) {
  if (currentMasks !== 0) {
    if (masksToInsertOrRemove !== 0) {
      var temp = currentMasks / masksToInsertOrRemove;
      var floored = Math.floor(temp);
      var ceiled = Math.ceil(temp);
      var diff = temp - floored;
      if (diff > 0.85) {
        return /* array */[ceiled];
      } else if (diff < 0.15) {
        return /* array */[floored];
      } else if (diff === 0) {
        return /* array */[temp];
      } else {
        return /* array */[
                floored,
                ceiled
              ];
      }
    } else {
      return /* array */[];
    }
  } else {
    return /* array */[];
  }
}

function make(children) {
  return ReasonReact.wrapJsForReason(TypographyWrapper.default, { }, children);
}

var TypographyWrapper$1 = /* module */[/* make */make];

var component = ReasonReact.statelessComponent("Result");

function make$1(results, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var listLength = results.length;
              if (listLength !== 0) {
                if (listLength !== 1) {
                  return $$Array.map((function (result) {
                                return ReasonReact.element(String(result), undefined, make(/* array */[" strik 1 maske ind pr " + (String(result) + " maske(r) ")]));
                              }), results);
                } else {
                  var result = Caml_array.caml_array_get(results, 0);
                  return ReasonReact.element(undefined, undefined, make(/* array */[" Strik 1 maske ind pr " + (String(result) + " maske(r) ")]));
                }
              } else {
                return ReasonReact.element(undefined, undefined, make(/* array */["Intet at udregne endnu"]));
              }
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var Result = /* module */[
  /* component */component,
  /* make */make$1
];

var resultJs = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make$1(jsProps.results, /* array */[]);
      }));

exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
exports.TypographyWrapper = TypographyWrapper$1;
exports.Result = Result;
exports.resultJs = resultJs;
/* component Not a pure module */
