// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Util$MyProjectName = require("./util.bs.js");
var Button$MyProjectName = require("./button.bs.js");

function initialState(param) {
  return /* record */[/* rows */0];
}

function reducer(action, state) {
  if (action) {
    return /* Update */Block.__(0, [/* record */[/* rows */0]]);
  } else {
    return /* Update */Block.__(0, [/* record */[/* rows */state[/* rows */0] + 1 | 0]]);
  }
}

var component = ReasonReact.reducerComponent("RowCalculator");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", undefined, ReasonReact.element(undefined, undefined, Util$MyProjectName.TypographyWrapper[/* make */0](/* array */[String(self[/* state */1][/* rows */0])])), ReasonReact.element(undefined, undefined, Button$MyProjectName.make(/* text */-856044371, (function (_e) {
                                    return Curry._1(self[/* send */3], /* Increment */0);
                                  }), /* array */["+1"])), ReasonReact.element(undefined, undefined, Button$MyProjectName.make(/* text */-856044371, (function (_e) {
                                    return Curry._1(self[/* send */3], /* Reset */1);
                                  }), /* array */["Reset"])));
            }),
          /* initialState */initialState,
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var InnerReason = /* module */[
  /* initialState */initialState,
  /* reducer */reducer,
  /* component */component,
  /* make */make
];

var component$1 = ReasonReact.statelessComponent("wrapper");

function make$1(_children) {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */component$1[/* didMount */4],
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (_self) {
              return ReasonReact.element(undefined, undefined, make(/* array */[]));
            }),
          /* initialState */component$1[/* initialState */10],
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */component$1[/* reducer */12],
          /* jsElementWrapped */component$1[/* jsElementWrapped */13]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component$1, (function (jsProps) {
        return make$1(jsProps.children);
      }));

exports.InnerReason = InnerReason;
exports.component = component$1;
exports.make = make$1;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
